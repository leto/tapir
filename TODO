=head1 These are things that need doin'

Please let me know if you start hacking on one of these or if you have any amazing ideas.

* Be able to run any test file, not just PIR tests

    Run /bin/sh -c or ./file, and then default to parrot if neither work ?
    We also have the option of using proc_exec from the global parrot config

* Parse todo/skips/bailout correctly

    http://cpansearch.perl.org/src/ANDYA/Test-Harness-3.17/lib/TAP/Parser/Grammar.pm

* Exit codes are not being dealt with correctly. This will require some internal redesign.
  stream.'is_pass' should take exit codes into account

* More detailed statistics in test summary

    exit codes if nonzero and test runtime

* Aggregation step in t/harness.pir needs to be abstracted out into Tapir::Harness and tested properly

    http://cpansearch.perl.org/src/ANDYA/Test-Harness-3.17/lib/TAP/Parser/Aggregator.pm

* Benchmark tapir against Test::Harness and Test::Run, with euler_bench
    Test::Run   http://web-cpan.berlios.de/modules/Test-Run/
    euler_bench http://github.com/notbenh/euler_bench

* Make the output format prettier
    line up "passed" in the same column/etc

* Running tests in parallel
    How to do it? There should be examples in the Parrot test suite

* Tests and implementation for parsing invalid plans

* Submitting smoke reports to smolder
    TAP::Harness::Archive for Parrot

* How to deal with differences been TAP versions?
